apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jet-factory-chart.fullname" . }}
  labels:
    {{- include "jet-factory-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "jet-factory-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "jet-factory-chart.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ include "jet-factory-chart.fullname" . }}-docker-registry-secret
      initContainers: 
        - name: {{ .Chart.Name }}-create-database
          command: ["sh", "-c"]
          args:
            - |
              psql -c "SELECT 1" \
              "user={{ .Values.database.user }} password={{ .Values.database.password }} dbname={{ .Values.database.database }} host={{ .Values.database.host }}" || \
              psql -c "CREATE DATABASE {{ .Values.database.database }}" \
              "user={{ .Values.database.user }} password={{ .Values.database.password }} host={{ .Values.database.host }}"
          image: {{ .Values.database.image }}
        - name: {{ .Chart.Name }}-migrate-database
          command: ["/bin/bash", "-c"]
          args: ["/app/bin/db_migrate" ]
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}-env
          image: {{ include "jet-factory-chart.image" . }}
      containers:
        - name: {{ .Chart.Name }}
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}-env
          image: {{ include "jet-factory-chart.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: jet-factory
              containerPort: 4000
              protocol: TCP
          resources:
            {{- .Values.resources | toYaml | nindent 12 }}
