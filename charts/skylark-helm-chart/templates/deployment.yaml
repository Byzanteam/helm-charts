apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "skylark-helm-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "skylark-helm-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "skylark-helm-chart.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ include "skylark-helm-chart.fullname" . }}-docker-registry-secret
      initContainers: 
        - name: {{ include "skylark-helm-chart.fullname" . }}-init
          command: ["/bin/bash", "-c"]
          args: ["for i in `ls /var/www/skylark/config/|grep example`;do newfile=`echo $i|sed 's/example.//'`; mv /var/www/skylark/config/$i /var/www/skylark/config/$newfile;done &&bundle exec rails db:create && bundle exec rails db:schema:load "]
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}-env
          image: {{ include "skylark-helm-chart.image" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "skylark-helm-chart.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}-env
          command: ["/bin/bash", "-c"]
          args: ["for i in `ls /var/www/skylark/config/|grep example`;do newfile=`echo $i|sed 's/example.//'`; mv /var/www/skylark/config/$i /var/www/skylark/config/$newfile;done && bundle exec rails db:migrate && bundle exec rails assets:precompile && bundle exec puma -C config/puma.rb"]
          ports:
            - name: skylark
              containerPort: 3000
              protocol: TCP
          resources:
            {{- .Values.resources | toYaml | nindent 12 }}
          volumeMounts: 
            {{- .Values.volumeMounts | toYaml | nindent 12}}
      restartPolicy: {{ .Values.restartPolicy }}
      volumes: 
        {{- .Values.volumes | toYaml | nindent 8}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sidekiq
  name: {{ .Chart.Name }}-sidekiq
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: sidekiq
  template:
    metadata:
      labels:
        app: sidekiq
    spec:
      containers:
        - name: {{ .Chart.Name }}
          command: ["/bin/bash", "-c"]
          args: ["for i in `ls /var/www/skylark/config/|grep -v settings|grep example`;do newfile=`echo $i|sed 's/example.//'`; mv /var/www/skylark/config/$i /var/www/skylark/config/$newfile;done && bundle exec sidekiq -C config/sidekiq.yml -L /var/www/skylark/log/sidekiq.log"]
          envFrom:
          - configMapRef:
              name: {{ .Chart.Name }}-env
          image: {{ include "skylark-helm-chart.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- .Values.resources | toYaml | nindent 12 }}
          volumeMounts: 
            {{- .Values.volumeMounts | toYaml | nindent 12}}
      restartPolicy: {{ .Values.restartPolicy }}
      volumes: 
        {{- .Values.volumes | toYaml | nindent 8}}